name: Release

on:
  push:
    branches: [main, dev]

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      # - name: Build application
      #   run: npm run build
      # - name: Run Lint
      #   run: npm run lint
      # - name: Run tests
      #   run: npm run lint # change it later to test

  create-release-stage:
    if: github.ref_name == 'dev'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - id: release
        uses: google-github-actions/release-please-action@v4.0.1
        with:
          token: ${{ secrets.TOKEN }}
          release-type: node
          target-branch: dev
      - name: Checkout code at release tag
        if: steps.release.outputs.releases_created == 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.release.outputs.tag_name }}
      - name: Configure AWS credentials
        if: steps.release.outputs.releases_created == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.WEB_IDENTITY_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: deploy to stage
        if: steps.release.outputs.releases_created == 'true'
        run: npm install && npx sst deploy --stage ci

  create-release-production:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - id: release
        uses: google-github-actions/release-please-action@v4.0.1
        with:
          token: ${{ secrets.TOKEN }}
          release-type: node
          target-branch: main
      - name: Checkout code at release tag
        if: steps.release.outputs.releases_created == 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.release.outputs.tag_name }}
      - name: Configure AWS credentials
        if: steps.release.outputs.releases_created == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.WEB_IDENTITY_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: deploy to stage
        if: steps.release.outputs.releases_created == 'true'
        run: npm install && npx sst deploy --stage prod